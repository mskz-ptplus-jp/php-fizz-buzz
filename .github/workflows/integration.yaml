name: Integration
on: 
  pull_request:
    branches:
      - main
jobs:
  Integration:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Pull compose.yaml and required directories from another repository
        run: |
          git clone https://github.com/mskz-ptplus-jp/docker-php83.git
          cp docker-php83/compose.yaml .
          cp -r docker-php83/docker ./docker
      - name: Setup
        run: |
          npm install
          npx playwright install
          docker compose up -d
      - name: Get APP Container ID
        id: get-app-container-id
        run: echo "APP_CONTAINER_ID=$(docker ps --filter 'name=app' -q)" >> $GITHUB_ENV
      - name: Copy repository contents to container
        run: |
          docker cp . ${APP_CONTAINER_ID}:/var/www/html
      - name: Install Composer dependencies
        run: |
          APP_CONTAINER_ID=$(docker ps --filter "name=app" -q)
          docker exec -w /var/www/html $APP_CONTAINER_ID composer install
      - name: Install Playwright dependencies
        run: |
          APP_CONTAINER_ID=$(docker ps --filter "name=app" -q)
          docker exec -w /var/www/html $APP_CONTAINER_ID npx playwright install
          docker exec -w /var/www/html $APP_CONTAINER_ID npx playwright install-deps  
      - name: Run Static Test
        run: |
          APP_CONTAINER_ID=$(docker ps --filter "name=app" -q)
          docker exec -w /var/www/html $APP_CONTAINER_ID vendor/bin/phpstan analyse
      - name: Run Unit Test
        run: |
          APP_CONTAINER_ID=$(docker ps --filter "name=app" -q)
          docker exec -w /var/www/html $APP_CONTAINER_ID vendor/bin/phpunit
      - name: Run E2E Test
        run: |
          APP_CONTAINER_ID=$(docker ps --filter "name=app" -q)
          docker exec -w /var/www/html $APP_CONTAINER_ID npx playwright test
